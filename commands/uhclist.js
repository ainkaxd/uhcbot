const { SlashCommandBuilder } = require('discord.js');

module.exports = {
  data: new SlashCommandBuilder()
    .setName('uhclist')
    .setDescription('–û–±–Ω–æ–≤–ª—è–µ—Ç embed —Å–æ —Å–ø–∏—Å–∫–æ–º –∫–æ–º–∞–Ω–¥ –≤—Ä—É—á–Ω—É—é'),

  async execute(interaction, client) {
    const guild = interaction.guild;
    const channel = await guild.channels.fetch(process.env.REGISTRATION_CHANNEL_ID);

    if (!client.registrationMessage) {
      return interaction.reply({
        content: '‚ùå –°–æ–æ–±—â–µ–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –ó–∞–ø—É—Å—Ç–∏ –∫–æ–º–∞–Ω–¥—É `/uhc-start` —Å–Ω–∞—á–∞–ª–∞.',
        ephemeral: true
      });
    }

    let description = '';
    let index = 1;
    for (const [_, team] of client.teams.entries()) {
      description += `**${index}.** <@${team.leader}> + <@${team.teammate}> ‚Äî **${team.name}**\n`;
      index++;
    }

    if (!description) description = '–ü–æ–∫–∞ –Ω–∏–∫—Ç–æ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è.';

    const { EmbedBuilder, ActionRowBuilder, ButtonBuilder, ButtonStyle } = require('discord.js');

    const embed = new EmbedBuilder()
      .setTitle('üìã –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥')
      .setDescription(description)
      .setColor(0x00ae86);

    const row = new ActionRowBuilder().addComponents(
      new ButtonBuilder().setCustomId('register').setLabel('–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è').setStyle(ButtonStyle.Success),
      new ButtonBuilder().setCustomId('edit').setLabel('–ò–∑–º–µ–Ω–∏—Ç—å —Å–æ—Å—Ç–∞–≤').setStyle(ButtonStyle.Primary),
      new ButtonBuilder().setCustomId('unregister').setLabel('–û—Ç–º–µ–Ω–∏—Ç—å —É—á–∞—Å—Ç–∏–µ').setStyle(ButtonStyle.Danger)
    );

    await client.registrationMessage.edit({ embeds: [embed], components: [row] });

    return interaction.reply({ content: '‚úÖ –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –æ–±–Ω–æ–≤–ª—ë–Ω.', ephemeral: true });
  }
};
